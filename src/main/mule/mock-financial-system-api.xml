<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd ">
    <http:listener-config name="mock-financial-system-api-httpListenerConfig">
        <http:listener-connection host="0.0.0.0" port="8081" />
    </http:listener-config>
    <apikit:config name="mock-financial-system-api-config" api="resource::209ef67a-ae27-4f34-965a-a34fed477013:mock-financial-system-api:1.0.0:raml:zip:mock-financial-system-api.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <flow name="mock-financial-system-api-main">
        <http:listener config-ref="mock-financial-system-api-httpListenerConfig" path="/financial/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body><![CDATA[#[payload]]]></http:body>
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="mock-financial-system-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Bad request"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">400</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">405</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">406</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">415</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not Implemented"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">501</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="mock-financial-system-api-console">
        <http:listener config-ref="mock-financial-system-api-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="mock-financial-system-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="get:\accounts:mock-financial-system-api-config">
        <ee:transform doc:name="Transform Message">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
[
  {
    id: "1",
    firstName: "Alice",
    lastName: "Smith",
    accountType: "Premium",
    company: "MuleSoft Inc.",
    address: "101 Main Street, San Francisco",
    phone: "+1-555-111-1111",
    website: "https://www.mulesoft.com"
  }, 
  {
    id: "2",
    firstName: "Bob",
    lastName: "Johnson",
    accountType: "Basic",
    company: "Tech Solutions",
    address: "202 Tech Avenue, New York",
    phone: "+1-555-222-2222",
    website: "https://www.techsolutions.com"
  }, 
  {
    id: "3",
    firstName: "Carlos",
    lastName: "Ramirez",
    accountType: "Gold",
    company: "Finanzas Globales",
    address: "303 Finance Blvd, Mexico City",
    phone: "+52-555-333-3333",
    website: "https://www.finanzasglobales.mx"
  }, 
  {
    id: "4",
    firstName: "Diana",
    lastName: "Martinez",
    accountType: "Standard",
    company: "RetailCorp",
    address: "404 Retail Street, BogotÃ¡",
    phone: "+57-1-444-4444",
    website: "https://www.retailcorp.co"
  }, 
  {
    id: "5",
    firstName: "Ethan",
    lastName: "Brown",
    accountType: "Platinum",
    company: "Tech Innovators",
    address: "505 Innovation Drive, London",
    phone: "+44-20-555-5555",
    website: "https://www.techinnovators.uk"
  }
] as Array {encoding: "UTF-8", mediaType: "application/json"}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="get:\balances:mock-financial-system-api-config">
        <ee:transform doc:name="Transform Message">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
[
  {
    accountId: "1",
    balance: 1200.75,
    currency: "USD",
    lastUpdated: "2024-01-31"
  }, 
  {
    accountId: "2",
    balance: 300,
    currency: "USD",
    lastUpdated: "2024-01-31"
  }, 
  {
    accountId: "3",
    balance: 4500,
    currency: "USD",
    lastUpdated: "2024-01-31"
  }, 
  {
    accountId: "4",
    balance: 150.25,
    currency: "USD",
    lastUpdated: "2024-01-31"
  }, 
  {
    accountId: "5",
    balance: 8000,
    currency: "USD",
    lastUpdated: "2024-01-31"
  }
] as Array {encoding: "UTF-8", mediaType: "application/json"}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="get:\transactions:mock-financial-system-api-config">
        <ee:transform doc:name="Transform Message">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
[
  {
    transactionId: "T1001",
    accountId: "1",
    date: "2024-01-10",
    amount: 250.75,
    "type": "CREDIT",
    description: "Salary Payment"
  }, 
  {
    transactionId: "T1002",
    accountId: "1",
    date: "2024-01-12",
    amount: -50,
    "type": "DEBIT",
    description: "Grocery Shopping"
  }, 
  {
    transactionId: "T2001",
    accountId: "2",
    date: "2024-01-15",
    amount: -200,
    "type": "DEBIT",
    description: "Electronics Purchase"
  }, 
  {
    transactionId: "T3001",
    accountId: "3",
    date: "2024-01-20",
    amount: 1000,
    "type": "CREDIT",
    description: "Freelance Project"
  }, 
  {
    transactionId: "T4001",
    accountId: "4",
    date: "2024-01-25",
    amount: -75.5,
    "type": "DEBIT",
    description: "Restaurant Bill"
  }
] as Array {encoding: "UTF-8", mediaType: "application/json"}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="get:\balances\(accountId):mock-financial-system-api-config">
        <ee:transform doc:name="Transform Message">
            <ee:variables>
                <ee:set-variable variableName="accountId">attributes.uriParams.'accountId'</ee:set-variable>
            </ee:variables>
        </ee:transform>
        <ee:transform doc:name="Transform Message">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  accountId: "1",
  balance: 1200.75,
  currency: "USD",
  lastUpdated: "2024-01-31"
} as Object {encoding: "UTF-8", mediaType: "application/json"}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="get:\accounts\(accountId):mock-financial-system-api-config">
        <ee:transform doc:name="Transform Message">
            <ee:variables>
                <ee:set-variable variableName="accountId">attributes.uriParams.'accountId'</ee:set-variable>
            </ee:variables>
        </ee:transform>
        <ee:transform doc:name="Transform Message">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  id: "1",
  firstName: "Alice",
  lastName: "Smith",
  accountType: "Premium",
  company: "MuleSoft Inc.",
  address: "101 Main Street, San Francisco",
  phone: "+1-555-111-1111",
  website: "https://www.mulesoft.com"
} as Object {encoding: "UTF-8", mediaType: "application/json"}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="get:\transactions\(transactionId):mock-financial-system-api-config">
        <ee:transform doc:name="Transform Message">
            <ee:variables>
                <ee:set-variable variableName="transactionId">attributes.uriParams.'transactionId'</ee:set-variable>
            </ee:variables>
        </ee:transform>
        <ee:transform doc:name="Transform Message">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  transactionId: "T1001",
  accountId: "1",
  date: "2024-01-10",
  amount: 250.75,
  "type": "CREDIT",
  description: "Salary Payment"
} as Object {encoding: "UTF-8", mediaType: "application/json"}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
</mule>
