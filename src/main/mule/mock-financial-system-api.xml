<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd  http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
    <http:listener-config name="mock-financial-system-api-httpListenerConfig">
        <http:listener-connection host="0.0.0.0" port="8081" />
    </http:listener-config>
    <apikit:config name="mock-financial-system-api-config" api="resource::209ef67a-ae27-4f34-965a-a34fed477013:mock-financial-system-api:2.0.1:raml:zip:mock-financial-system-api.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <flow name="mock-financial-system-api-main">
        <http:listener config-ref="mock-financial-system-api-httpListenerConfig" path="/financial/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body><![CDATA[#[payload]]]></http:body>
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="mock-financial-system-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Bad request"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">400</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">405</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">406</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">415</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not Implemented"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">501</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="mock-financial-system-api-console">
        <http:listener config-ref="mock-financial-system-api-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="mock-financial-system-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="get:\accounts:mock-financial-system-api-config">
        <db:select doc:name="db-accounts" doc:id="da35baff-a4ce-43b1-a8cc-96a3f2e72b77" config-ref="Database_Config">
            <db:sql><![CDATA[SELECT * FROM accounts]]></db:sql>
        </db:select>
        <ee:transform doc:name="account-response">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="get:\balances:mock-financial-system-api-config">
        <db:select doc:name="db-balances " doc:id="7078b1e3-e171-4000-941f-e6e129b120cd" config-ref="Database_Config">
            <db:sql><![CDATA[SELECT * FROM balances]]></db:sql>
        </db:select>
        <ee:transform doc:name="balances-response">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
[
  {
    accountId: "1",
    balance: 1200.75,
    currency: "USD",
    lastUpdated: "2024-01-31"
  }, 
  {
    accountId: "2",
    balance: 300,
    currency: "USD",
    lastUpdated: "2024-01-31"
  }, 
  {
    accountId: "3",
    balance: 4500,
    currency: "USD",
    lastUpdated: "2024-01-31"
  }, 
  {
    accountId: "4",
    balance: 150.25,
    currency: "USD",
    lastUpdated: "2024-01-31"
  }, 
  {
    accountId: "5",
    balance: 8000,
    currency: "USD",
    lastUpdated: "2024-01-31"
  }
] as Array {encoding: "UTF-8", mediaType: "application/json"}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="get:\transactions:mock-financial-system-api-config">
        <db:select doc:name="db-transactions " doc:id="0665366d-1fd1-4330-a6b1-edda3e1610ad" config-ref="Database_Config">
            <db:sql><![CDATA[SELECT * FROM transactions]]></db:sql>
        </db:select>
        <ee:transform doc:name="transactions-response">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
[
  {
    transactionId: "T1001",
    accountId: "1",
    date: "2024-01-10",
    amount: 250.75,
    "type": "CREDIT",
    description: "Salary Payment"
  }, 
  {
    transactionId: "T1002",
    accountId: "1",
    date: "2024-01-12",
    amount: -50,
    "type": "DEBIT",
    description: "Grocery Shopping"
  }, 
  {
    transactionId: "T2001",
    accountId: "2",
    date: "2024-01-15",
    amount: -200,
    "type": "DEBIT",
    description: "Electronics Purchase"
  }, 
  {
    transactionId: "T3001",
    accountId: "3",
    date: "2024-01-20",
    amount: 1000,
    "type": "CREDIT",
    description: "Freelance Project"
  }, 
  {
    transactionId: "T4001",
    accountId: "4",
    date: "2024-01-25",
    amount: -75.5,
    "type": "DEBIT",
    description: "Restaurant Bill"
  }
] as Array {encoding: "UTF-8", mediaType: "application/json"}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="get:\balances\(accountId):mock-financial-system-api-config">
        <db:select doc:name="db-balance-by-id" doc:id="33a0de9d-d770-45d6-a078-2589139134bb" config-ref="Database_Config">
            <db:sql><![CDATA[SELECT account_id, balance, currency, last_updated
FROM balances
WHERE account_id = :accountId;]]></db:sql>
            <db:input-parameters><![CDATA[#[{
	"accountId": attributes.uriParams.accountId
}]]]></db:input-parameters>
        </db:select>
        <ee:transform doc:name="response-balance-by-id">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="get:\accounts\(accountId):mock-financial-system-api-config">
        <db:select doc:name="db-account-by-id" doc:id="26f5f6b9-062b-4389-9637-473b12ee8d4a" config-ref="Database_Config">
            <db:sql><![CDATA[SELECT id, first_name, last_name, account_type, company, address, phone, website
FROM accounts
WHERE id = :accountId]]></db:sql>
            <db:input-parameters><![CDATA[#[{
	"accountId": attributes.uriParams.accountId
}]]]></db:input-parameters>
        </db:select>
        <ee:transform doc:name="response-account-by-id">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="get:\transactions\(transactionId):mock-financial-system-api-config">
        <db:select doc:name="db-account-by-id" doc:id="42b62133-29f0-41d2-a028-c29db6d18850" config-ref="Database_Config">
            <db:sql><![CDATA[SELECT transaction_id, account_id, date, amount, type, description
FROM transactions
WHERE transaction_id = :transactionId]]></db:sql>
            <db:input-parameters><![CDATA[#[{
	"transactionId": attributes.uriParams.transactionId
}]]]></db:input-parameters>
        </db:select>
        <ee:transform doc:name="response-transactions-by-id">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
</mule>
